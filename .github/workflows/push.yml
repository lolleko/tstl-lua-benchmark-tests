on:
  push:
    branches:
      - "*"
jobs:
  benchmark:
    runs-on: ubuntu-latest
    steps:
      - name: Lua Install
        run: sudo apt-get install lua5.3 luajit
      - name: Checkout
        uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 12.13.1
      - run: npm ci
      - name: Cache benchmark data
        id: cache-benchmark
        uses: actions/cache@v1
        with:
          path: ./benchmarks/data
          key: ${{ runner.os }}-master-benchmark-${{ github.sha }}
          restore-keys: ${{ runner.os }}-master-benchmark-
      - name: Create benchmark data dir on cache miss
        if: steps.cache-benchmark.outputs.cache-hit != 'true'
        run: mkdir -p ./benchmarks/data
      - name: Save Original Benchmark
        # only save if pull request and data present
        # this is required so we only cache the new benchmark data if we are on master
        if: ${{ github.base_ref && steps.cache-benchmark.outputs.cache-hit == 'true'}}
        run: cp -r ./benchmarks/data .benchmarks/data_original && ls
      - name: Build benchmark Lua 5.3
        run: npx typescript-to-lua -p tsconfig.53.json
        working-directory: benchmarks
      - name: Run benchmark Lua 5.3
        id: benchmark-lua
        run: echo ::set-output name=info::`lua5.3 -- main.lua ../data/benchmark_master_53.json`
        working-directory: benchmarks/dist
      - name: Build benchmark LuaJIT
        run: npx typescript-to-lua -p tsconfig.jit.json
        working-directory: benchmarks
      - name: Run benchmark LuaJIT
        id: benchmark-jit
        run: echo ::set-output name=info::`luajit -- main.lua ../data/benchmark_master_jit.json`
        working-directory: benchmarks/dist
      - name: Restore original benchmark data
        # only restore if pull request
        # this is required so we only cache the new benchmark data if we are on master
        if: ${{ github.base_ref && steps.cache-benchmark.outputs.cache-hit == 'true'}}
        run: rm -r ./benchmarks/data && mv ./benchmarks/data_original .benchmarks/data && ls
      - name: Create benchmark check
        uses: actions/github-script@0.9.0
        with:
          benchmark-info-lua: ${{steps.benchmark-lua.outputs.info}}
          benchmark-info-jit: ${{steps.benchmark-jit.outputs.info}}
          script: |
            const benchmarkInfoLua = JSON.parse(core.getInput('benchmark-info-lua', { required: true }));
            const benchmarkInfoJIT = JSON.parse(core.getInput('benchmark-info-jit', { required: true }));

            const summary = `### Lua5.3\n${benchmarkInfoLua.summary}\n### LuaJIT\n${benchmarkInfoJIT.summary}`;

            const text = `### Lua5.3\n${benchmarkInfoLua.text}\n### LuaJIT\n${benchmarkInfoJIT.text}`;

            github.checks.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              name: "Benchmark results",
              head_sha: context.sha,
              status: "completed",
              conclusion: "neutral",
              output: {
                title: "Benchmark results",
                summary: summary,
                text: text
              }
            });
